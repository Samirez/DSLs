/**
 * generated by Xtext 2.30.0
 */
package interactive.fictiondsl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link interactive.fictiondsl.Statement#getAnnounce <em>Announce</em>}</li>
 *   <li>{@link interactive.fictiondsl.Statement#getEnd <em>End</em>}</li>
 *   <li>{@link interactive.fictiondsl.Statement#getQuestion <em>Question</em>}</li>
 * </ul>
 *
 * @see interactive.fictiondsl.FictiondslPackage#getStatement()
 * @model
 * @generated
 */
public interface Statement extends EObject
{
  /**
   * Returns the value of the '<em><b>Announce</b></em>' containment reference list.
   * The list contents are of type {@link interactive.fictiondsl.Announce}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Announce</em>' containment reference list.
   * @see interactive.fictiondsl.FictiondslPackage#getStatement_Announce()
   * @model containment="true"
   * @generated
   */
  EList<Announce> getAnnounce();

  /**
   * Returns the value of the '<em><b>End</b></em>' containment reference list.
   * The list contents are of type {@link interactive.fictiondsl.End}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>End</em>' containment reference list.
   * @see interactive.fictiondsl.FictiondslPackage#getStatement_End()
   * @model containment="true"
   * @generated
   */
  EList<End> getEnd();

  /**
   * Returns the value of the '<em><b>Question</b></em>' containment reference list.
   * The list contents are of type {@link interactive.fictiondsl.Question}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Question</em>' containment reference list.
   * @see interactive.fictiondsl.FictiondslPackage#getStatement_Question()
   * @model containment="true"
   * @generated
   */
  EList<Question> getQuestion();

} // Statement
