/*
 * generated by Xtext 2.30.0
 */
grammar InternalLanguagedsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ui.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ui.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ui.services.LanguagedslGrammarAccess;

}

@parser::members {

 	private LanguagedslGrammarAccess grammarAccess;

    public InternalLanguagedslParser(TokenStream input, LanguagedslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Title";
   	}

   	@Override
   	protected LanguagedslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='title'
		{
			newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getTitleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTitleAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTitleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTitleAccess().getFormFormParserRuleCall_2_0());
				}
				lv_form_2_0=ruleForm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTitleRule());
					}
					add(
						$current,
						"form",
						lv_form_2_0,
						"ui.Languagedsl.Form");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleForm
entryRuleForm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormRule()); }
	iv_ruleForm=ruleForm
	{ $current=$iv_ruleForm.current; }
	EOF;

// Rule Form
ruleForm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='form'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormAccess().getFormKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFormAccess().getParamParameterParserRuleCall_2_1_0_0());
						}
						lv_param_3_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormRule());
							}
							add(
								$current,
								"param",
								lv_param_3_0,
								"ui.Languagedsl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFormAccess().getParam2ParameterParserRuleCall_2_1_1_1_0());
							}
							lv_param2_5_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFormRule());
								}
								add(
									$current,
									"param2",
									lv_param2_5_0,
									"ui.Languagedsl.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0());
				}
				lv_layout_8_0=ruleLayout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormRule());
					}
					add(
						$current,
						"layout",
						lv_layout_8_0,
						"ui.Languagedsl.Layout");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"ui.Languagedsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFormUse
entryRuleFormUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormUseRule()); }
	iv_ruleFormUse=ruleFormUse
	{ $current=$iv_ruleFormUse.current; }
	EOF;

// Rule FormUse
ruleFormUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFormUseAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormUseRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFormUseAccess().getExpExpParserRuleCall_2_0_0());
					}
					lv_exp_2_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormUseRule());
						}
						set(
							$current,
							"exp",
							lv_exp_2_0,
							"ui.Languagedsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFormUseAccess().getExp2ExpParserRuleCall_2_1_1_0());
						}
						lv_exp2_4_0=ruleExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormUseRule());
							}
							set(
								$current,
								"exp2",
								lv_exp2_4_0,
								"ui.Languagedsl.Exp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	iv_ruleLayout=ruleLayout
	{ $current=$iv_ruleLayout.current; }
	EOF;

// Rule Layout
ruleLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLayoutAccess().getLayoutAction_0(),
					$current);
			}
		)
		(
			otherlv_1='row'
			{
				newLeafNode(otherlv_1, grammarAccess.getLayoutAccess().getRowKeyword_1_0());
			}
			    |
			otherlv_2='column'
			{
				newLeafNode(otherlv_2, grammarAccess.getLayoutAccess().getColumnKeyword_1_1());
			}
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayoutAccess().getComponentComponentParserRuleCall_3_0());
				}
				lv_component_4_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayoutRule());
					}
					add(
						$current,
						"component",
						lv_component_4_0,
						"ui.Languagedsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getLayoutLayoutParserRuleCall_0_0());
				}
				lv_layout_0_0=ruleLayout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"layout",
						lv_layout_0_0,
						"ui.Languagedsl.Layout");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getComponentAccess().getComponentAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getComponentAccess().getElementElementParserRuleCall_1_1_0());
					}
					lv_element_2_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComponentRule());
						}
						add(
							$current,
							"element",
							lv_element_2_0,
							"ui.Languagedsl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getComponentAccess().getFormuseFormUseParserRuleCall_2_0());
				}
				lv_formuse_3_0=ruleFormUse
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComponentRule());
					}
					add(
						$current,
						"formuse",
						lv_formuse_3_0,
						"ui.Languagedsl.FormUse");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getLabelLabelParserRuleCall_0_0());
				}
				lv_label_0_0=ruleLabel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					add(
						$current,
						"label",
						lv_label_0_0,
						"ui.Languagedsl.Label");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getInputInputParserRuleCall_1_0());
				}
				lv_input_1_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					add(
						$current,
						"input",
						lv_input_1_0,
						"ui.Languagedsl.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getButtonButtonParserRuleCall_2_0());
				}
				lv_button_2_0=ruleButton
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					add(
						$current,
						"button",
						lv_button_2_0,
						"ui.Languagedsl.Button");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='button'
		{
			newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getButtonAccess().getSaveSaveParserRuleCall_1_0());
				}
				lv_save_1_0=ruleSave
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getButtonRule());
					}
					set(
						$current,
						"save",
						lv_save_1_0,
						"ui.Languagedsl.Save");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getButtonAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getButtonAccess().getExpExpParserRuleCall_4_0());
				}
				lv_exp_4_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getButtonRule());
					}
					set(
						$current,
						"exp",
						lv_exp_4_0,
						"ui.Languagedsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSave
entryRuleSave returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSaveRule()); }
	iv_ruleSave=ruleSave
	{ $current=$iv_ruleSave.current.getText(); }
	EOF;

// Rule Save
ruleSave returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='*'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSaveAccess().getAsteriskKeyword());
	}
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputAccess().getInputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInputAccess().getColonKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getInputAccess().getExpExpParserRuleCall_3_0_0_0());
						}
						lv_exp_3_0=ruleExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputRule());
							}
							set(
								$current,
								"exp",
								lv_exp_3_0,
								"ui.Languagedsl.Exp");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getInputAccess().getConditionConditionParserRuleCall_3_0_1_0());
						}
						lv_condition_4_0=ruleCondition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputRule());
							}
							set(
								$current,
								"condition",
								lv_condition_4_0,
								"ui.Languagedsl.Condition");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getInputRule());
							}
						}
						otherlv_5=RULE_ID
						{
							newLeafNode(otherlv_5, grammarAccess.getInputAccess().getRefReferenceCrossReference_3_1_0_0());
						}
					)
				)
				(
					otherlv_6='<='
					{
						newLeafNode(otherlv_6, grammarAccess.getInputAccess().getLessThanSignEqualsSignKeyword_3_1_1_0());
					}
					    |
					otherlv_7='=='
					{
						newLeafNode(otherlv_7, grammarAccess.getInputAccess().getEqualsSignEqualsSignKeyword_3_1_1_1());
					}
					    |
					otherlv_8='!='
					{
						newLeafNode(otherlv_8, grammarAccess.getInputAccess().getExclamationMarkEqualsSignKeyword_3_1_1_2());
					}
					    |
					otherlv_9='>='
					{
						newLeafNode(otherlv_9, grammarAccess.getInputAccess().getGreaterThanSignEqualsSignKeyword_3_1_1_3());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getInputAccess().getExpExpParserRuleCall_3_1_2_0());
						}
						lv_exp_10_0=ruleExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInputRule());
							}
							set(
								$current,
								"exp",
								lv_exp_10_0,
								"ui.Languagedsl.Exp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_op_0_1='>'
					{
						newLeafNode(lv_op_0_1, grammarAccess.getConditionAccess().getOpGreaterThanSignKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_1, null);
					}
					    |
					lv_op_0_2='<'
					{
						newLeafNode(lv_op_0_2, grammarAccess.getConditionAccess().getOpLessThanSignKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_2, null);
					}
					    |
					lv_op_0_3='<='
					{
						newLeafNode(lv_op_0_3, grammarAccess.getConditionAccess().getOpLessThanSignEqualsSignKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_3, null);
					}
					    |
					lv_op_0_4='>='
					{
						newLeafNode(lv_op_0_4, grammarAccess.getConditionAccess().getOpGreaterThanSignEqualsSignKeyword_0_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_4, null);
					}
					    |
					lv_op_0_5='=='
					{
						newLeafNode(lv_op_0_5, grammarAccess.getConditionAccess().getOpEqualsSignEqualsSignKeyword_0_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_5, null);
					}
					    |
					lv_op_0_6='!='
					{
						newLeafNode(lv_op_0_6, grammarAccess.getConditionAccess().getOpExclamationMarkEqualsSignKeyword_0_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_6, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getExpExpParserRuleCall_1_0_0());
					}
					lv_exp_1_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"exp",
							lv_exp_1_0,
							"ui.Languagedsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getRefReferenceCrossReference_1_1_0());
					}
				)
			)
		)
		(
			otherlv_3='&&'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getAmpersandAmpersandKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getTypeTypeParserRuleCall_2_1_0());
					}
					lv_type_4_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"ui.Languagedsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						lv_op2_5_1='>'
						{
							newLeafNode(lv_op2_5_1, grammarAccess.getConditionAccess().getOp2GreaterThanSignKeyword_2_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_1, null);
						}
						    |
						lv_op2_5_2='<'
						{
							newLeafNode(lv_op2_5_2, grammarAccess.getConditionAccess().getOp2LessThanSignKeyword_2_2_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_2, null);
						}
						    |
						lv_op2_5_3='<='
						{
							newLeafNode(lv_op2_5_3, grammarAccess.getConditionAccess().getOp2LessThanSignEqualsSignKeyword_2_2_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_3, null);
						}
						    |
						lv_op2_5_4='>='
						{
							newLeafNode(lv_op2_5_4, grammarAccess.getConditionAccess().getOp2GreaterThanSignEqualsSignKeyword_2_2_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_4, null);
						}
						    |
						lv_op2_5_5='=='
						{
							newLeafNode(lv_op2_5_5, grammarAccess.getConditionAccess().getOp2EqualsSignEqualsSignKeyword_2_2_0_4());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_5, null);
						}
						    |
						lv_op2_5_6='!='
						{
							newLeafNode(lv_op2_5_6, grammarAccess.getConditionAccess().getOp2ExclamationMarkEqualsSignKeyword_2_2_0_5());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getConditionRule());
							}
							setWithLastConsumed($current, "op2", lv_op2_5_6, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getExp2ExpParserRuleCall_2_3_0());
					}
					lv_exp2_6_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"exp2",
							lv_exp2_6_0,
							"ui.Languagedsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='label'
		{
			newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getExpExpParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"ui.Languagedsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='&'
			{
				newLeafNode(otherlv_3, grammarAccess.getLabelAccess().getAmpersandKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLabelAccess().getFieldFieldParserRuleCall_3_1_0());
					}
					lv_field_4_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLabelRule());
						}
						add(
							$current,
							"field",
							lv_field_4_0,
							"ui.Languagedsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='&'
			{
				newLeafNode(otherlv_5, grammarAccess.getLabelAccess().getAmpersandKeyword_3_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getExp2ExpParserRuleCall_4_0());
				}
				lv_exp2_6_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_6_0,
						"ui.Languagedsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFieldRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_STRING
				{
					newLeafNode(lv_value_0_0, grammarAccess.getExpAccess().getValueSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExpAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"ui.Languagedsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_number_2_0=RULE_INT
				{
					newLeafNode(lv_number_2_0, grammarAccess.getExpAccess().getNumberINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExpRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpAccess().getTextExpParserRuleCall_3());
		}
		this_TextExp_3=ruleTextExp
		{
			$current = $this_TextExp_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTextExp
entryRuleTextExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextExpRule()); }
	iv_ruleTextExp=ruleTextExp
	{ $current=$iv_ruleTextExp.current; }
	EOF;

// Rule TextExp
ruleTextExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextExpAccess().getNumberSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextExpAccess().getExpExpParserRuleCall_1_0());
				}
				lv_exp_1_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextExpRule());
					}
					set(
						$current,
						"exp",
						lv_exp_1_0,
						"ui.Languagedsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getStringKeyword_0());
		}
		    |
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getBooleanKeyword_1());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getNumberKeyword_2());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
