/**
 * generated by Xtext 2.30.0
 */
package ui.languagedsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import ui.languagedsl.Component;
import ui.languagedsl.Element;
import ui.languagedsl.FormUse;
import ui.languagedsl.LanguagedslPackage;
import ui.languagedsl.Layout;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Component</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ui.languagedsl.impl.ComponentImpl#getLayout <em>Layout</em>}</li>
 *   <li>{@link ui.languagedsl.impl.ComponentImpl#getElement <em>Element</em>}</li>
 *   <li>{@link ui.languagedsl.impl.ComponentImpl#getFormuse <em>Formuse</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComponentImpl extends MinimalEObjectImpl.Container implements Component
{
  /**
   * The cached value of the '{@link #getLayout() <em>Layout</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayout()
   * @generated
   * @ordered
   */
  protected EList<Layout> layout;

  /**
   * The cached value of the '{@link #getElement() <em>Element</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected EList<Element> element;

  /**
   * The cached value of the '{@link #getFormuse() <em>Formuse</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFormuse()
   * @generated
   * @ordered
   */
  protected EList<FormUse> formuse;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComponentImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagedslPackage.Literals.COMPONENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Layout> getLayout()
  {
    if (layout == null)
    {
      layout = new EObjectContainmentEList<Layout>(Layout.class, this, LanguagedslPackage.COMPONENT__LAYOUT);
    }
    return layout;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Element> getElement()
  {
    if (element == null)
    {
      element = new EObjectContainmentEList<Element>(Element.class, this, LanguagedslPackage.COMPONENT__ELEMENT);
    }
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<FormUse> getFormuse()
  {
    if (formuse == null)
    {
      formuse = new EObjectContainmentEList<FormUse>(FormUse.class, this, LanguagedslPackage.COMPONENT__FORMUSE);
    }
    return formuse;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LanguagedslPackage.COMPONENT__LAYOUT:
        return ((InternalEList<?>)getLayout()).basicRemove(otherEnd, msgs);
      case LanguagedslPackage.COMPONENT__ELEMENT:
        return ((InternalEList<?>)getElement()).basicRemove(otherEnd, msgs);
      case LanguagedslPackage.COMPONENT__FORMUSE:
        return ((InternalEList<?>)getFormuse()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagedslPackage.COMPONENT__LAYOUT:
        return getLayout();
      case LanguagedslPackage.COMPONENT__ELEMENT:
        return getElement();
      case LanguagedslPackage.COMPONENT__FORMUSE:
        return getFormuse();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagedslPackage.COMPONENT__LAYOUT:
        getLayout().clear();
        getLayout().addAll((Collection<? extends Layout>)newValue);
        return;
      case LanguagedslPackage.COMPONENT__ELEMENT:
        getElement().clear();
        getElement().addAll((Collection<? extends Element>)newValue);
        return;
      case LanguagedslPackage.COMPONENT__FORMUSE:
        getFormuse().clear();
        getFormuse().addAll((Collection<? extends FormUse>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagedslPackage.COMPONENT__LAYOUT:
        getLayout().clear();
        return;
      case LanguagedslPackage.COMPONENT__ELEMENT:
        getElement().clear();
        return;
      case LanguagedslPackage.COMPONENT__FORMUSE:
        getFormuse().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagedslPackage.COMPONENT__LAYOUT:
        return layout != null && !layout.isEmpty();
      case LanguagedslPackage.COMPONENT__ELEMENT:
        return element != null && !element.isEmpty();
      case LanguagedslPackage.COMPONENT__FORMUSE:
        return formuse != null && !formuse.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ComponentImpl
