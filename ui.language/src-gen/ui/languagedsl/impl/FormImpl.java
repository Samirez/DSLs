/**
 * generated by Xtext 2.30.0
 */
package ui.languagedsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import ui.languagedsl.Form;
import ui.languagedsl.LanguagedslPackage;
import ui.languagedsl.Layout;
import ui.languagedsl.Parameter;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Form</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ui.languagedsl.impl.FormImpl#getName <em>Name</em>}</li>
 *   <li>{@link ui.languagedsl.impl.FormImpl#getParam <em>Param</em>}</li>
 *   <li>{@link ui.languagedsl.impl.FormImpl#getParam2 <em>Param2</em>}</li>
 *   <li>{@link ui.languagedsl.impl.FormImpl#getLayout <em>Layout</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FormImpl extends MinimalEObjectImpl.Container implements Form
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getParam() <em>Param</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam()
   * @generated
   * @ordered
   */
  protected EList<Parameter> param;

  /**
   * The cached value of the '{@link #getParam2() <em>Param2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam2()
   * @generated
   * @ordered
   */
  protected EList<Parameter> param2;

  /**
   * The cached value of the '{@link #getLayout() <em>Layout</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayout()
   * @generated
   * @ordered
   */
  protected EList<Layout> layout;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FormImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LanguagedslPackage.Literals.FORM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LanguagedslPackage.FORM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getParam()
  {
    if (param == null)
    {
      param = new EObjectContainmentEList<Parameter>(Parameter.class, this, LanguagedslPackage.FORM__PARAM);
    }
    return param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Parameter> getParam2()
  {
    if (param2 == null)
    {
      param2 = new EObjectContainmentEList<Parameter>(Parameter.class, this, LanguagedslPackage.FORM__PARAM2);
    }
    return param2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Layout> getLayout()
  {
    if (layout == null)
    {
      layout = new EObjectContainmentEList<Layout>(Layout.class, this, LanguagedslPackage.FORM__LAYOUT);
    }
    return layout;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LanguagedslPackage.FORM__PARAM:
        return ((InternalEList<?>)getParam()).basicRemove(otherEnd, msgs);
      case LanguagedslPackage.FORM__PARAM2:
        return ((InternalEList<?>)getParam2()).basicRemove(otherEnd, msgs);
      case LanguagedslPackage.FORM__LAYOUT:
        return ((InternalEList<?>)getLayout()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LanguagedslPackage.FORM__NAME:
        return getName();
      case LanguagedslPackage.FORM__PARAM:
        return getParam();
      case LanguagedslPackage.FORM__PARAM2:
        return getParam2();
      case LanguagedslPackage.FORM__LAYOUT:
        return getLayout();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LanguagedslPackage.FORM__NAME:
        setName((String)newValue);
        return;
      case LanguagedslPackage.FORM__PARAM:
        getParam().clear();
        getParam().addAll((Collection<? extends Parameter>)newValue);
        return;
      case LanguagedslPackage.FORM__PARAM2:
        getParam2().clear();
        getParam2().addAll((Collection<? extends Parameter>)newValue);
        return;
      case LanguagedslPackage.FORM__LAYOUT:
        getLayout().clear();
        getLayout().addAll((Collection<? extends Layout>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LanguagedslPackage.FORM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case LanguagedslPackage.FORM__PARAM:
        getParam().clear();
        return;
      case LanguagedslPackage.FORM__PARAM2:
        getParam2().clear();
        return;
      case LanguagedslPackage.FORM__LAYOUT:
        getLayout().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LanguagedslPackage.FORM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case LanguagedslPackage.FORM__PARAM:
        return param != null && !param.isEmpty();
      case LanguagedslPackage.FORM__PARAM2:
        return param2 != null && !param2.isEmpty();
      case LanguagedslPackage.FORM__LAYOUT:
        return layout != null && !layout.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //FormImpl
